---
name: Run Test Playbooks Minikube

on: [push, pull_request]

jobs:
  Integration-test:
    name: Deploy Tower to Minikube and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout awx operator
        uses: actions/checkout@v2
        with:
          repository: ansible/awx-operator

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: pah_config_template

      - name: "Install dependencies"
        run: pip install -r pah_config_template/.github/requirements.txt

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: 'v1.21.0'
          kubernetes version: 'v1.20.7'
          start args: '--addons=ingress'

      - name: Wait / Sleep
        uses: jakejarvis/wait-action@v0.1.0
        with:
          time: '20s'

      - name: Setup awx operator
        run: |
          minikube kubectl get deployments
          minikube kubectl create secret generic awx-admin-password -- --from-literal=password=password
          minikube addons enable ingress
          alias kubectl="minikube kubectl --"
          make deploy NAMESPACE=default
          kubectl apply -f pah_config_template/.github/workflow-config/kube/awx_def.yml
      - name: Wait / Sleep
        uses: jakejarvis/wait-action@v0.1.0
        with:
          time: '180s'

      - name: Check service URL
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 25
          retry_wait_seconds: 30
          command: minikube service awx-service --url

      - name: minikube kubectl get pods
        run: minikube kubectl get pods

      - name: Set service url
        run: echo '::set-output name=SERVICEURL::$(minikube service awx-service --url)'
        id: service-url

      - name: Display service url
        run: echo "Service URL is ${{ steps.service-url.outputs.SERVICEURL }}"

      - name: Display Versions
        run: which python && pip --version && ansible --version

      - name: Checkout
        uses: actions/checkout@v2

      - name: "Install Galaxy dependencies"
        run: ansible-galaxy collection install -r .github/collections/requirements.yml

      - name: Check service password
        run: echo "Service password is ${{ steps.service-password.outputs.SERVICEPASSWORD }}"

      - name: "Perform playbook tests"
        run: ansible-playbook pah_configure.yml -e pah_hostname=${{ steps.service-url.outputs.SERVICEURL }}
...
